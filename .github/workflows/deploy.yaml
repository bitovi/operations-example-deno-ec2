# Syntax docs are here:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# Docs for the Bitovi Actions:
# - https://github.com/bitovi/github-actions-deploy-docker-to-ec2
# - https://github.com/bitovi/github-actions-deploy-ecs
#
############################################################
name: Deploy to EC2 and ECS
on:
  push:
    branches: [ main ]
    paths-ignore:
      - README.md

jobs:
  EC2-Deploy:
    runs-on: ubuntu-latest
    environment: 
      name: EC2
      url: ${{ steps.ec2.outputs.vm_url }}
    steps:
      - name: Deploy to EC2
        id: ec2
        uses: bitovi/github-actions-deploy-docker-to-ec2@v1.0.0
        with:
          # To SPIN UP use false, to DESTROY use true
          # tf_state_bucket_destroy only takes effect when stack_destroy is true.
          # stack_destroy: true
          tf_state_bucket_destroy: true

          # These are required UNLESS you add an AWS login action to your workflow.
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          
          aws_default_region: us-east-1

          # Set to the port your app/container is listening on
          app_port: 8000

          # Ensures no collision with other resources from this repo/workflow
          aws_resource_identifier: deno-demo-ec2

          # Turn on Route53 DNS
          # Requires configuring R53 in your AWS account.
          aws_r53_enable: true
          domain_name: bitovi-sandbox.com
          sub_domain: deno-ec2
          aws_r53_enable_cert: true

  ECS-Deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ECS
      url: ${{ steps.ecs.outputs.ecs_dns_record }}
    steps:
      - name: Deploy to ECS
        id: ecs
        uses: bitovi/github-actions-deploy-ecs@v0.1.2
        with:
          # To SPIN UP use false, to DESTROY use true
          # tf_state_bucket_destroy only takes effect when tf_stack_destroy is true.
          # tf_stack_destroy: true
          tf_state_bucket_destroy: true
        
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
          aws_default_region: us-east-1

          # Why is this here in an ECS action?
          # You can knock down the ECS resources without destroying the whole stack.
          # It currently must be set `true` here, but will be changed to `default:true` in a future release.
          aws_ecs_enable: true

          # The image(s) to launch. Must be pre-built.
          # Comma-separate multiple values. Multiple containers will each live in their own task.
          # There is an advanced use case to combine them. Contact Bitovi for info on this!
          aws_ecs_app_image: bitovi/deno-demo:latest

          # If using multiple containers, comma-separate the values, in the order defined in `aws_ecs_app_image`.
          aws_ecs_task_cpu: 2048
          aws_ecs_task_mem: 4096
  
          aws_ecs_cloudwatch_enable: true
          aws_ecs_cloudwatch_retention_days: 7

          # Set to the port your app/container is listening on
          # If using multiple containers, comma-separate the values, in the order defined in `aws_ecs_app_image`.
          aws_ecs_container_port: 8000
          aws_ecs_lb_port: 8000
          aws_ecs_lb_redirect_enable: true
          aws_ecs_assign_public_ip: true

          # prevent collisions with other resources from your workflow
          aws_resource_identifier: deno-demo-ecs

          # requires R53 config
          aws_r53_enable: true
          aws_r53_domain_name: bitovi-sandbox.com
          aws_r53_sub_domain_name: deno-ecs
          aws_r53_enable_cert: true

          # A file in the repo with Env Vars. `repo_env` is default, can be anything.
          # Can leave undefined if file is `repo_env` (as in the EC2 job above).
          env_repo: repo_env
